/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
import type { ScriptArg } from './ScriptArg';
import {
    ScriptArgFromJSON,
    ScriptArgFromJSONTyped,
    ScriptArgToJSON,
} from './ScriptArg';

/**
 * 
 * @export
 * @interface ScriptInfo
 */
export interface ScriptInfo {
    /**
     * Script name
     * @type {string}
     * @memberof ScriptInfo
     */
    name?: string;
    /**
     * Flag specifying whether this script is an alwayson script
     * @type {boolean}
     * @memberof ScriptInfo
     */
    isAlwayson?: boolean;
    /**
     * Flag specifying whether this script is an img2img script
     * @type {boolean}
     * @memberof ScriptInfo
     */
    isImg2img?: boolean;
    /**
     * List of script's arguments
     * @type {Array<ScriptArg>}
     * @memberof ScriptInfo
     */
    args: Array<ScriptArg>;
}

/**
 * Check if a given object implements the ScriptInfo interface.
 */
export function instanceOfScriptInfo(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "args" in value;

    return isInstance;
}

export function ScriptInfoFromJSON(json: any): ScriptInfo {
    return ScriptInfoFromJSONTyped(json, false);
}

export function ScriptInfoFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScriptInfo {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': !exists(json, 'name') ? undefined : json['name'],
        'isAlwayson': !exists(json, 'is_alwayson') ? undefined : json['is_alwayson'],
        'isImg2img': !exists(json, 'is_img2img') ? undefined : json['is_img2img'],
        'args': ((json['args'] as Array<any>).map(ScriptArgFromJSON)),
    };
}

export function ScriptInfoToJSON(value?: ScriptInfo | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'is_alwayson': value.isAlwayson,
        'is_img2img': value.isImg2img,
        'args': ((value.args as Array<any>).map(ScriptArgToJSON)),
    };
}


/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface ScriptArg
 */
export interface ScriptArg {
    /**
     * Name of the argument in UI
     * @type {string}
     * @memberof ScriptArg
     */
    label?: string;
    /**
     * Default value of the argument
     * @type {any}
     * @memberof ScriptArg
     */
    value?: any | null;
    /**
     * Minimum allowed value for the argumentin UI
     * @type {any}
     * @memberof ScriptArg
     */
    minimum?: any | null;
    /**
     * Maximum allowed value for the argumentin UI
     * @type {any}
     * @memberof ScriptArg
     */
    maximum?: any | null;
    /**
     * Step for changing value of the argumentin UI
     * @type {any}
     * @memberof ScriptArg
     */
    step?: any | null;
    /**
     * Possible values for the argument
     * @type {Array<string>}
     * @memberof ScriptArg
     */
    choices?: Array<string>;
}

/**
 * Check if a given object implements the ScriptArg interface.
 */
export function instanceOfScriptArg(value: object): boolean {
    let isInstance = true;

    return isInstance;
}

export function ScriptArgFromJSON(json: any): ScriptArg {
    return ScriptArgFromJSONTyped(json, false);
}

export function ScriptArgFromJSONTyped(json: any, ignoreDiscriminator: boolean): ScriptArg {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'label': !exists(json, 'label') ? undefined : json['label'],
        'value': !exists(json, 'value') ? undefined : json['value'],
        'minimum': !exists(json, 'minimum') ? undefined : json['minimum'],
        'maximum': !exists(json, 'maximum') ? undefined : json['maximum'],
        'step': !exists(json, 'step') ? undefined : json['step'],
        'choices': !exists(json, 'choices') ? undefined : json['choices'],
    };
}

export function ScriptArgToJSON(value?: ScriptArg | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'label': value.label,
        'value': value.value,
        'minimum': value.minimum,
        'maximum': value.maximum,
        'step': value.step,
        'choices': value.choices,
    };
}


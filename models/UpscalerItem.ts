/* tslint:disable */
/* eslint-disable */
/**
 * FastAPI
 * No description provided (generated by Openapi Generator https://github.com/openapitools/openapi-generator)
 *
 * The version of the OpenAPI document: 0.1.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */

import { exists, mapValues } from '../runtime';
/**
 * 
 * @export
 * @interface UpscalerItem
 */
export interface UpscalerItem {
    /**
     * 
     * @type {string}
     * @memberof UpscalerItem
     */
    name: string;
    /**
     * 
     * @type {string}
     * @memberof UpscalerItem
     */
    modelName?: string;
    /**
     * 
     * @type {string}
     * @memberof UpscalerItem
     */
    modelPath?: string;
    /**
     * 
     * @type {string}
     * @memberof UpscalerItem
     */
    modelUrl?: string;
    /**
     * 
     * @type {number}
     * @memberof UpscalerItem
     */
    scale?: number;
}

/**
 * Check if a given object implements the UpscalerItem interface.
 */
export function instanceOfUpscalerItem(value: object): boolean {
    let isInstance = true;
    isInstance = isInstance && "name" in value;

    return isInstance;
}

export function UpscalerItemFromJSON(json: any): UpscalerItem {
    return UpscalerItemFromJSONTyped(json, false);
}

export function UpscalerItemFromJSONTyped(json: any, ignoreDiscriminator: boolean): UpscalerItem {
    if ((json === undefined) || (json === null)) {
        return json;
    }
    return {
        
        'name': json['name'],
        'modelName': !exists(json, 'model_name') ? undefined : json['model_name'],
        'modelPath': !exists(json, 'model_path') ? undefined : json['model_path'],
        'modelUrl': !exists(json, 'model_url') ? undefined : json['model_url'],
        'scale': !exists(json, 'scale') ? undefined : json['scale'],
    };
}

export function UpscalerItemToJSON(value?: UpscalerItem | null): any {
    if (value === undefined) {
        return undefined;
    }
    if (value === null) {
        return null;
    }
    return {
        
        'name': value.name,
        'model_name': value.modelName,
        'model_path': value.modelPath,
        'model_url': value.modelUrl,
        'scale': value.scale,
    };
}

